{"id":"node_modules/algorithms/algorithms/math/newton_sqrt.js","dependencies":[{"name":"C:\\Users\\crist\\MyGitProjects\\MyWebProjects\\myWebApp\\package.json","includedInParent":true,"mtime":1588264908566},{"name":"C:\\Users\\crist\\MyGitProjects\\MyWebProjects\\myWebApp\\node_modules\\algorithms\\package.json","includedInParent":true,"mtime":1588264908519}],"generated":{"js":"'use strict';\n\n/**\n * Newton's method to calculate square root\n *\n * @param Number n - the number which the square root should be calculated\n * @param Number tolerance - The error margin accepted (Default 1e-7)\n * @param Number maxIterations - The max number of iterations (Default 1e7)\n */\nvar sqrt = function (n, tolerance, maxIterations) {\n  tolerance = tolerance || 1e-7;\n  maxIterations = maxIterations || 1e7;\n\n  var upperBound = n;\n  var lowerBound = 0;\n\n  var i = 0;\n  var square, x;\n  do {\n    i++;\n    x = (upperBound - lowerBound) / 2 + lowerBound;\n    square = x * x;\n    if (square < n) lowerBound = x;\n    else upperBound = x;\n  } while (Math.abs(square - n) > tolerance && i < maxIterations);\n\n  // Checks if the number is a perfect square to return the exact root\n  var roundX = Math.round(x);\n  if (roundX * roundX === n) x = roundX;\n\n  return x;\n};\n\nmodule.exports = sqrt;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/algorithms/algorithms/math/newton_sqrt.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/algorithms/algorithms/math/newton_sqrt.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/algorithms/algorithms/math/newton_sqrt.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/algorithms/algorithms/math/newton_sqrt.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/algorithms/algorithms/math/newton_sqrt.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/algorithms/algorithms/math/newton_sqrt.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/algorithms/algorithms/math/newton_sqrt.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/algorithms/algorithms/math/newton_sqrt.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/algorithms/algorithms/math/newton_sqrt.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/algorithms/algorithms/math/newton_sqrt.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/algorithms/algorithms/math/newton_sqrt.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/algorithms/algorithms/math/newton_sqrt.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/algorithms/algorithms/math/newton_sqrt.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/algorithms/algorithms/math/newton_sqrt.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/algorithms/algorithms/math/newton_sqrt.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/algorithms/algorithms/math/newton_sqrt.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/algorithms/algorithms/math/newton_sqrt.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/algorithms/algorithms/math/newton_sqrt.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/algorithms/algorithms/math/newton_sqrt.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/algorithms/algorithms/math/newton_sqrt.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/algorithms/algorithms/math/newton_sqrt.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/algorithms/algorithms/math/newton_sqrt.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/algorithms/algorithms/math/newton_sqrt.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/algorithms/algorithms/math/newton_sqrt.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/algorithms/algorithms/math/newton_sqrt.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/algorithms/algorithms/math/newton_sqrt.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/algorithms/algorithms/math/newton_sqrt.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/algorithms/algorithms/math/newton_sqrt.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/algorithms/algorithms/math/newton_sqrt.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/algorithms/algorithms/math/newton_sqrt.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/algorithms/algorithms/math/newton_sqrt.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/algorithms/algorithms/math/newton_sqrt.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/algorithms/algorithms/math/newton_sqrt.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/algorithms/algorithms/math/newton_sqrt.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/algorithms/algorithms/math/newton_sqrt.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}}],"sources":{"node_modules/algorithms/algorithms/math/newton_sqrt.js":"'use strict';\n\n/**\n * Newton's method to calculate square root\n *\n * @param Number n - the number which the square root should be calculated\n * @param Number tolerance - The error margin accepted (Default 1e-7)\n * @param Number maxIterations - The max number of iterations (Default 1e7)\n */\nvar sqrt = function (n, tolerance, maxIterations) {\n  tolerance = tolerance || 1e-7;\n  maxIterations = maxIterations || 1e7;\n\n  var upperBound = n;\n  var lowerBound = 0;\n\n  var i = 0;\n  var square, x;\n  do {\n    i++;\n    x = (upperBound - lowerBound) / 2 + lowerBound;\n    square = x * x;\n    if (square < n) lowerBound = x;\n    else upperBound = x;\n  } while (Math.abs(square - n) > tolerance && i < maxIterations);\n\n  // Checks if the number is a perfect square to return the exact root\n  var roundX = Math.round(x);\n  if (roundX * roundX === n) x = roundX;\n\n  return x;\n};\n\nmodule.exports = sqrt;\n"},"lineCount":35}},"error":null,"hash":"5fa53cac4d164d07f4f9af5ce4a1f1fb","cacheData":{"env":{}}}
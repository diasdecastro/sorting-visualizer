{"id":"node_modules/algorithms/algorithms/string/hamming.js","dependencies":[{"name":"C:\\Users\\crist\\MyGitProjects\\MyWebProjects\\myWebApp\\package.json","includedInParent":true,"mtime":1588264908566},{"name":"C:\\Users\\crist\\MyGitProjects\\MyWebProjects\\myWebApp\\node_modules\\algorithms\\package.json","includedInParent":true,"mtime":1588264908519}],"generated":{"js":"/**\n *\n * \"Hamming distance between two strings of equal length is the number of\n * positions at which the corresponding symbols are different. In another way,\n * it measures the minimum number of substitutions required to change one string\n * into the other.\" - https://en.wikipedia.org/wiki/Hamming_distance\n *\n */\n'use strict';\n\nvar hamming = function (a, b) {\n  if (a.length !== b.length) {\n    throw new Error('Strings must be equal in length');\n  }\n\n  var dist = 0;\n\n  for (var i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      dist++;\n    }\n  }\n\n  return dist;\n};\n\nmodule.exports = hamming;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/algorithms/algorithms/string/hamming.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/algorithms/algorithms/string/hamming.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/algorithms/algorithms/string/hamming.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/algorithms/algorithms/string/hamming.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/algorithms/algorithms/string/hamming.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/algorithms/algorithms/string/hamming.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/algorithms/algorithms/string/hamming.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/algorithms/algorithms/string/hamming.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/algorithms/algorithms/string/hamming.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/algorithms/algorithms/string/hamming.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/algorithms/algorithms/string/hamming.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/algorithms/algorithms/string/hamming.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/algorithms/algorithms/string/hamming.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/algorithms/algorithms/string/hamming.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/algorithms/algorithms/string/hamming.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/algorithms/algorithms/string/hamming.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/algorithms/algorithms/string/hamming.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/algorithms/algorithms/string/hamming.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/algorithms/algorithms/string/hamming.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/algorithms/algorithms/string/hamming.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/algorithms/algorithms/string/hamming.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/algorithms/algorithms/string/hamming.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/algorithms/algorithms/string/hamming.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/algorithms/algorithms/string/hamming.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/algorithms/algorithms/string/hamming.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/algorithms/algorithms/string/hamming.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/algorithms/algorithms/string/hamming.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/algorithms/algorithms/string/hamming.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}}],"sources":{"node_modules/algorithms/algorithms/string/hamming.js":"/**\n *\n * \"Hamming distance between two strings of equal length is the number of\n * positions at which the corresponding symbols are different. In another way,\n * it measures the minimum number of substitutions required to change one string\n * into the other.\" - https://en.wikipedia.org/wiki/Hamming_distance\n *\n */\n'use strict';\n\nvar hamming = function (a, b) {\n  if (a.length !== b.length) {\n    throw new Error('Strings must be equal in length');\n  }\n\n  var dist = 0;\n\n  for (var i = 0; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      dist++;\n    }\n  }\n\n  return dist;\n};\n\nmodule.exports = hamming;\n"},"lineCount":28}},"error":null,"hash":"5a46fb2a409a686e8e9c3be448cd7956","cacheData":{"env":{}}}
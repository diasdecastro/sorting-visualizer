{"id":"node_modules/algorithms/algorithms/sorting/counting_sort.js","dependencies":[{"name":"C:\\Users\\crist\\MyGitProjects\\MyWebProjects\\myWebApp\\package.json","includedInParent":true,"mtime":1588264908566},{"name":"C:\\Users\\crist\\MyGitProjects\\MyWebProjects\\myWebApp\\node_modules\\algorithms\\package.json","includedInParent":true,"mtime":1588264908519}],"generated":{"js":"'use strict';\n\n/**\n * Sorts an array of objects according to their 'key' property\n * Every object inside the array MUST have the 'key' property with\n * a integer value.\n *\n * Execution Time: (3 * array.length - 1)\n * Asymptotic Complexity: O(array.length + maximumKey)\n *\n * @param Array\n * @return Array\n */\nvar countingSort = function (array) {\n  var max = maximumKey(array);\n  var auxiliaryArray = [];\n  var length = array.length;\n  var i;\n\n  for (i = 0; i < length; i++) {\n    var position = array[i].key;\n\n    if (auxiliaryArray[position] === undefined) {\n      auxiliaryArray[position] = [];\n    }\n\n    auxiliaryArray[position].push(array[i]);\n  }\n\n  array = [];\n  var pointer = 0;\n\n  for (i = 0; i <= max; i++) {\n    if (auxiliaryArray[i] !== undefined) {\n      var localLength = auxiliaryArray[i].length;\n\n      for (var j = 0; j < localLength; j++) {\n        array[pointer++] = auxiliaryArray[i][j];\n      }\n    }\n  }\n\n  return array;\n};\n\n/**\n * Finds the maximum key from an array of objects\n *\n * Asymptotic Complexity: O(array.length)\n *\n * @param Array\n * @return Integer\n */\nvar maximumKey = function (array) {\n  var max = array[0].key;\n  var length = array.length;\n\n  for (var i = 1; i < length; i++) {\n    if (array[i].key > max) {\n      max = array[i].key;\n    }\n  }\n\n  return max;\n};\n\nmodule.exports = countingSort;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/algorithms/algorithms/sorting/counting_sort.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}}],"sources":{"node_modules/algorithms/algorithms/sorting/counting_sort.js":"'use strict';\n\n/**\n * Sorts an array of objects according to their 'key' property\n * Every object inside the array MUST have the 'key' property with\n * a integer value.\n *\n * Execution Time: (3 * array.length - 1)\n * Asymptotic Complexity: O(array.length + maximumKey)\n *\n * @param Array\n * @return Array\n */\nvar countingSort = function (array) {\n  var max = maximumKey(array);\n  var auxiliaryArray = [];\n  var length = array.length;\n  var i;\n\n  for (i = 0; i < length; i++) {\n    var position = array[i].key;\n\n    if (auxiliaryArray[position] === undefined) {\n      auxiliaryArray[position] = [];\n    }\n\n    auxiliaryArray[position].push(array[i]);\n  }\n\n  array = [];\n  var pointer = 0;\n\n  for (i = 0; i <= max; i++) {\n    if (auxiliaryArray[i] !== undefined) {\n      var localLength = auxiliaryArray[i].length;\n\n      for (var j = 0; j < localLength; j++) {\n        array[pointer++] = auxiliaryArray[i][j];\n      }\n    }\n  }\n\n  return array;\n};\n\n/**\n * Finds the maximum key from an array of objects\n *\n * Asymptotic Complexity: O(array.length)\n *\n * @param Array\n * @return Integer\n */\nvar maximumKey = function (array) {\n  var max = array[0].key;\n  var length = array.length;\n\n  for (var i = 1; i < length; i++) {\n    if (array[i].key > max) {\n      max = array[i].key;\n    }\n  }\n\n  return max;\n};\n\nmodule.exports = countingSort;\n"},"lineCount":68}},"error":null,"hash":"78564f05df1a013d02a92500f2dbb472","cacheData":{"env":{}}}
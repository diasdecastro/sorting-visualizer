{"id":"node_modules/algorithms/algorithms/search/dfs.js","dependencies":[{"name":"C:\\Users\\crist\\MyGitProjects\\MyWebProjects\\myWebApp\\package.json","includedInParent":true,"mtime":1588264908566},{"name":"C:\\Users\\crist\\MyGitProjects\\MyWebProjects\\myWebApp\\node_modules\\algorithms\\package.json","includedInParent":true,"mtime":1588264908519}],"generated":{"js":"'use strict';\n\n/**\n * Depth first search for trees\n * (in order)\n */\nvar inOrder = function (node, callback) {\n  if (node) {\n    inOrder(node.left, callback);\n    callback(node.value);\n    inOrder(node.right, callback);\n  }\n};\n\n/**\n * Pre order\n */\nvar preOrder = function (node, callback) {\n  if (node) {\n    callback(node.value);\n    preOrder(node.left, callback);\n    preOrder(node.right, callback);\n  }\n};\n\n/**\n * Post order\n */\nvar postOrder = function (node, callback) {\n  if (node) {\n    postOrder(node.left, callback);\n    postOrder(node.right, callback);\n    callback(node.value);\n  }\n};\n\n// Set inOrder as the default implementation\ninOrder.preOrder = preOrder;\ninOrder.postOrder = postOrder;\nmodule.exports = inOrder;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/algorithms/algorithms/search/dfs.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}}],"sources":{"node_modules/algorithms/algorithms/search/dfs.js":"'use strict';\n\n/**\n * Depth first search for trees\n * (in order)\n */\nvar inOrder = function (node, callback) {\n  if (node) {\n    inOrder(node.left, callback);\n    callback(node.value);\n    inOrder(node.right, callback);\n  }\n};\n\n/**\n * Pre order\n */\nvar preOrder = function (node, callback) {\n  if (node) {\n    callback(node.value);\n    preOrder(node.left, callback);\n    preOrder(node.right, callback);\n  }\n};\n\n/**\n * Post order\n */\nvar postOrder = function (node, callback) {\n  if (node) {\n    postOrder(node.left, callback);\n    postOrder(node.right, callback);\n    callback(node.value);\n  }\n};\n\n// Set inOrder as the default implementation\ninOrder.preOrder = preOrder;\ninOrder.postOrder = postOrder;\nmodule.exports = inOrder;\n"},"lineCount":41}},"error":null,"hash":"454cd86e73366ba4cc580cbb6dbee295","cacheData":{"env":{}}}
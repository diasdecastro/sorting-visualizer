{"id":"node_modules/algorithms/algorithms/graph/depth_first_search.js","dependencies":[{"name":"C:\\Users\\crist\\MyGitProjects\\MyWebProjects\\myWebApp\\package.json","includedInParent":true,"mtime":1588264908566},{"name":"C:\\Users\\crist\\MyGitProjects\\MyWebProjects\\myWebApp\\node_modules\\algorithms\\package.json","includedInParent":true,"mtime":1588264908519}],"generated":{"js":"'use strict';\n\n\n/**\n * @typedef {Object} Callbacks\n * @param {function(vertex: *, neighbor: *): boolean} allowTraversal -\n *   Determines whether DFS should traverse from the vertex to its neighbor\n *   (along the edge). By default prohibits visiting the same vertex again.\n * @param {function(vertex: *, neighbor: *)} beforeTraversal - Called before\n *   recursive DFS call.\n * @param {function(vertex: *, neighbor: *)} afterTraversal - Called after\n *   recursive DFS call.\n * @param {function(vertex: *)} enterVertex - Called when DFS enters the vertex.\n * @param {function(vertex: *)} leaveVertex - Called when DFS leaves the vertex.\n */\n\n\n/**\n * Fill in missing callbacks.\n * @param {Callbacks} callbacks\n * @param {Array} seenVertices - Vertices already discovered,\n *   used by default allowTraversal implementation.\n * @return {Callbacks} The same object or new one (if null passed).\n */\nvar normalizeCallbacks = function (callbacks, seenVertices) {\n  callbacks = callbacks || {};\n\n  callbacks.allowTraversal = callbacks.allowTraversal || (function () {\n    var seen = {};\n    seenVertices.forEach(function (vertex) {\n      seen[vertex] = true;\n    });\n\n    return function (vertex, neighbor) {\n      // It should still be possible to redefine other callbacks,\n      // so we better do all at once here.\n\n      if (!seen[neighbor]) {\n        seen[neighbor] = true;\n        return true;\n      }\n      return false;\n    };\n  })();\n\n  var noop = function () {};\n  callbacks.beforeTraversal = callbacks.beforeTraversal || noop;\n  callbacks.afterTraversal = callbacks.afterTraversal || noop;\n  callbacks.enterVertex = callbacks.enterVertex || noop;\n  callbacks.leaveVertex = callbacks.leaveVertex || noop;\n\n  return callbacks;\n};\n\n\n/**\n * Run Depth-First Search from a start vertex.\n * Complexity (default implementation): O(V + E).\n *\n * @param {Graph} graph\n * @param {*} startVertex\n * @param {Callbacks} [callbacks]\n */\nvar depthFirstSearch = function (graph, startVertex, callbacks) {\n  dfsLoop(graph, startVertex, normalizeCallbacks(callbacks, [startVertex]));\n};\n\n\nvar dfsLoop = function dfsLoop(graph, vertex, callbacks) {\n  callbacks.enterVertex(vertex);\n\n  graph.neighbors(vertex).forEach(function (neighbor) {\n    if (callbacks.allowTraversal(vertex, neighbor)) {\n      callbacks.beforeTraversal(vertex, neighbor);\n      dfsLoop(graph, neighbor, callbacks);\n      callbacks.afterTraversal(vertex, neighbor);\n    }\n  });\n\n  callbacks.leaveVertex(vertex);\n};\n\n\nmodule.exports = depthFirstSearch;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/algorithms/algorithms/graph/depth_first_search.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}}],"sources":{"node_modules/algorithms/algorithms/graph/depth_first_search.js":"'use strict';\n\n\n/**\n * @typedef {Object} Callbacks\n * @param {function(vertex: *, neighbor: *): boolean} allowTraversal -\n *   Determines whether DFS should traverse from the vertex to its neighbor\n *   (along the edge). By default prohibits visiting the same vertex again.\n * @param {function(vertex: *, neighbor: *)} beforeTraversal - Called before\n *   recursive DFS call.\n * @param {function(vertex: *, neighbor: *)} afterTraversal - Called after\n *   recursive DFS call.\n * @param {function(vertex: *)} enterVertex - Called when DFS enters the vertex.\n * @param {function(vertex: *)} leaveVertex - Called when DFS leaves the vertex.\n */\n\n\n/**\n * Fill in missing callbacks.\n * @param {Callbacks} callbacks\n * @param {Array} seenVertices - Vertices already discovered,\n *   used by default allowTraversal implementation.\n * @return {Callbacks} The same object or new one (if null passed).\n */\nvar normalizeCallbacks = function (callbacks, seenVertices) {\n  callbacks = callbacks || {};\n\n  callbacks.allowTraversal = callbacks.allowTraversal || (function () {\n    var seen = {};\n    seenVertices.forEach(function (vertex) {\n      seen[vertex] = true;\n    });\n\n    return function (vertex, neighbor) {\n      // It should still be possible to redefine other callbacks,\n      // so we better do all at once here.\n\n      if (!seen[neighbor]) {\n        seen[neighbor] = true;\n        return true;\n      }\n      return false;\n    };\n  })();\n\n  var noop = function () {};\n  callbacks.beforeTraversal = callbacks.beforeTraversal || noop;\n  callbacks.afterTraversal = callbacks.afterTraversal || noop;\n  callbacks.enterVertex = callbacks.enterVertex || noop;\n  callbacks.leaveVertex = callbacks.leaveVertex || noop;\n\n  return callbacks;\n};\n\n\n/**\n * Run Depth-First Search from a start vertex.\n * Complexity (default implementation): O(V + E).\n *\n * @param {Graph} graph\n * @param {*} startVertex\n * @param {Callbacks} [callbacks]\n */\nvar depthFirstSearch = function (graph, startVertex, callbacks) {\n  dfsLoop(graph, startVertex, normalizeCallbacks(callbacks, [startVertex]));\n};\n\n\nvar dfsLoop = function dfsLoop(graph, vertex, callbacks) {\n  callbacks.enterVertex(vertex);\n\n  graph.neighbors(vertex).forEach(function (neighbor) {\n    if (callbacks.allowTraversal(vertex, neighbor)) {\n      callbacks.beforeTraversal(vertex, neighbor);\n      dfsLoop(graph, neighbor, callbacks);\n      callbacks.afterTraversal(vertex, neighbor);\n    }\n  });\n\n  callbacks.leaveVertex(vertex);\n};\n\n\nmodule.exports = depthFirstSearch;\n"},"lineCount":85}},"error":null,"hash":"4692beed272744bda89330e38b3ef245","cacheData":{"env":{}}}
{"id":"node_modules/algorithms/algorithms/math/extended_euclidean.js","dependencies":[{"name":"C:\\Users\\crist\\MyGitProjects\\MyWebProjects\\myWebApp\\package.json","includedInParent":true,"mtime":1588264908566},{"name":"C:\\Users\\crist\\MyGitProjects\\MyWebProjects\\myWebApp\\node_modules\\algorithms\\package.json","includedInParent":true,"mtime":1588264908519}],"generated":{"js":"'use strict';\n\n/**\n * Extended Euclidean algorithm to calculate the solve of\n *   ax + by = gcd(a, b)\n * gcd(a, b) is the greatest common divisor of integers a and b.\n *\n * @param Number\n * @param Number\n *\n * @return {Number, Number}\n */\nvar extEuclid = function (a, b) {\n  var s = 0, oldS = 1;\n  var t = 1, oldT = 0;\n  var r = b, oldR = a;\n  var quotient, temp;\n  while (r !== 0) {\n    quotient = Math.floor(oldR / r);\n\n    temp = r;\n    r = oldR - quotient * r;\n    oldR = temp;\n\n    temp = s;\n    s = oldS - quotient * s;\n    oldS = temp;\n\n    temp = t;\n    t = oldT - quotient * t;\n    oldT = temp;\n  }\n\n  return {\n    x: oldS,\n    y: oldT\n  };\n};\n\nmodule.exports = extEuclid;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/algorithms/algorithms/math/extended_euclidean.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}}],"sources":{"node_modules/algorithms/algorithms/math/extended_euclidean.js":"'use strict';\n\n/**\n * Extended Euclidean algorithm to calculate the solve of\n *   ax + by = gcd(a, b)\n * gcd(a, b) is the greatest common divisor of integers a and b.\n *\n * @param Number\n * @param Number\n *\n * @return {Number, Number}\n */\nvar extEuclid = function (a, b) {\n  var s = 0, oldS = 1;\n  var t = 1, oldT = 0;\n  var r = b, oldR = a;\n  var quotient, temp;\n  while (r !== 0) {\n    quotient = Math.floor(oldR / r);\n\n    temp = r;\n    r = oldR - quotient * r;\n    oldR = temp;\n\n    temp = s;\n    s = oldS - quotient * s;\n    oldS = temp;\n\n    temp = t;\n    t = oldT - quotient * t;\n    oldT = temp;\n  }\n\n  return {\n    x: oldS,\n    y: oldT\n  };\n};\n\nmodule.exports = extEuclid;\n"},"lineCount":41}},"error":null,"hash":"ea60a31290fd9a41271ee650e243f796","cacheData":{"env":{}}}
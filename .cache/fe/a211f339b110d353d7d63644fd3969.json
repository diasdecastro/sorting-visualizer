{"id":"node_modules/algorithms/data_structures/treap.js","dependencies":[{"name":"C:\\Users\\crist\\MyGitProjects\\MyWebProjects\\myWebApp\\package.json","includedInParent":true,"mtime":1588264908566},{"name":"C:\\Users\\crist\\MyGitProjects\\MyWebProjects\\myWebApp\\node_modules\\algorithms\\package.json","includedInParent":true,"mtime":1588264908519}],"generated":{"js":"'use strict';\n\n/**\n * Tree node\n */\nfunction Node(value, left, right) {\n  this.value = value;\n  this.children = [left, right];\n  this.size = 1;\n  this.height = 1;\n  this.key = Math.random();\n}\n\n/**\n * Computer the number of childnodes\n */\nNode.prototype.resize = function () {\n  this.size = (this.children[0] ? this.children[0].size : 0) \n            + (this.children[1] ? this.children[1].size : 0) + 1;\n  this.height = Math.max(this.children[0] ? this.children[0].height : 0,\n  \t\t\t\t\t\t this.children[1] ? this.children[1].height : 0) + 1;\n  return this;\n};\n\n/**\n * Zigzag rotate of tree nodes\n */\nNode.prototype.rotate = function (side) {\n  var temp = this.children[side];\n\n  // Rotate\n  this.children[side] = temp.children[1 - side];\n  temp.children[1 - side] = this;\n\n  this.resize();\n  temp.resize();\n\n  return temp;\n};\n\n/**\n * Treap\n */\nfunction Treap() {\n  this.root = null;\n}\n\n/**\n * Insert new value into the subtree of `node`\n */\nTreap.prototype._insert = function (node, value) {\n  if (node === null) {\n    return new Node(value, null, null);\n  }\n\n  // Passing to childnodes and update\n  var side = ~~(value > node.value);\n  node.children[side] = this._insert(node.children[side], value);\n\n  // Keep it balance\n  if (node.children[side].key < node.key) {\n\treturn node.rotate(side);\n  } else {\n\treturn node.resize();\n  }\n};\n\nTreap.prototype._find = function (node, value) {\n  if (node === null) {\n    // Empty tree\n    return false;\n  }\n  if (node.value === value) {\n    // Found!\n    return true;\n  }\n\n  // Search within childnodes\n  var side = ~~(value > node.value);\n  return this._find(node.children[side], value);\n};\n\nTreap.prototype._minimum = function (node) {\n  if (node === null) {\n    // Empty tree, returns Infinity\n    return Infinity;\n  }\n\n  return Math.min(node.value, this._minimum(node.children[0]));\n};\n\nTreap.prototype._maximum = function (node) {\n  if (node === null) {\n    // Empty tree, returns -Infinity\n    return -Infinity;\n  }\n\n  return Math.max(node.value, this._maximum(node.children[1]));\n};\n\nTreap.prototype._remove = function (node, value) {\n  if (node === null) {\n    // Empty node, value not found\n    return null;\n  }\n\n  var side;\n\n  if (node.value === value) {\n    if (node.children[0] === null && node.children[1] === null) {\n      // It's a leaf, set to null\n      return null;\n    }\n\n\t// Rotate to a subtree and remove it\n\tside = (node.children[0] === null ? 1 : 0);\n\tnode = node.rotate(side);\n  \tnode.children[1 - side] = this._remove(node.children[1 - side], value);\n  \treturn node.resize();\n  } else {\n    side = ~~(value > node.value);\n    node.children[side] = this._remove(node.children[side], value);\n  \treturn node.resize();\n  }\n};\n\nTreap.prototype.insert = function (value) {\n  this.root = this._insert(this.root, value);\n};\n\nTreap.prototype.find = function (value) {\n  return this._find(this.root, value);\n};\n\nTreap.prototype.minimum = function () {\n  return this._minimum(this.root);\n};\n\nTreap.prototype.maximum = function () {\n  return this._maximum(this.root);\n};\n\nTreap.prototype.remove = function (value) {\n  this.root = this._remove(this.root, value);\n};\n\nTreap.prototype.size = function () {\n  return this.root ? this.root.size : 0;\n};\n\nTreap.prototype.height = function () {\n  return this.root ? this.root.height : 0;\n};\n\nmodule.exports = Treap;\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/algorithms/data_structures/treap.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}}],"sources":{"node_modules/algorithms/data_structures/treap.js":"'use strict';\n\n/**\n * Tree node\n */\nfunction Node(value, left, right) {\n  this.value = value;\n  this.children = [left, right];\n  this.size = 1;\n  this.height = 1;\n  this.key = Math.random();\n}\n\n/**\n * Computer the number of childnodes\n */\nNode.prototype.resize = function () {\n  this.size = (this.children[0] ? this.children[0].size : 0) \n            + (this.children[1] ? this.children[1].size : 0) + 1;\n  this.height = Math.max(this.children[0] ? this.children[0].height : 0,\n  \t\t\t\t\t\t this.children[1] ? this.children[1].height : 0) + 1;\n  return this;\n};\n\n/**\n * Zigzag rotate of tree nodes\n */\nNode.prototype.rotate = function (side) {\n  var temp = this.children[side];\n\n  // Rotate\n  this.children[side] = temp.children[1 - side];\n  temp.children[1 - side] = this;\n\n  this.resize();\n  temp.resize();\n\n  return temp;\n};\n\n/**\n * Treap\n */\nfunction Treap() {\n  this.root = null;\n}\n\n/**\n * Insert new value into the subtree of `node`\n */\nTreap.prototype._insert = function (node, value) {\n  if (node === null) {\n    return new Node(value, null, null);\n  }\n\n  // Passing to childnodes and update\n  var side = ~~(value > node.value);\n  node.children[side] = this._insert(node.children[side], value);\n\n  // Keep it balance\n  if (node.children[side].key < node.key) {\n\treturn node.rotate(side);\n  } else {\n\treturn node.resize();\n  }\n};\n\nTreap.prototype._find = function (node, value) {\n  if (node === null) {\n    // Empty tree\n    return false;\n  }\n  if (node.value === value) {\n    // Found!\n    return true;\n  }\n\n  // Search within childnodes\n  var side = ~~(value > node.value);\n  return this._find(node.children[side], value);\n};\n\nTreap.prototype._minimum = function (node) {\n  if (node === null) {\n    // Empty tree, returns Infinity\n    return Infinity;\n  }\n\n  return Math.min(node.value, this._minimum(node.children[0]));\n};\n\nTreap.prototype._maximum = function (node) {\n  if (node === null) {\n    // Empty tree, returns -Infinity\n    return -Infinity;\n  }\n\n  return Math.max(node.value, this._maximum(node.children[1]));\n};\n\nTreap.prototype._remove = function (node, value) {\n  if (node === null) {\n    // Empty node, value not found\n    return null;\n  }\n\n  var side;\n\n  if (node.value === value) {\n    if (node.children[0] === null && node.children[1] === null) {\n      // It's a leaf, set to null\n      return null;\n    }\n\n\t// Rotate to a subtree and remove it\n\tside = (node.children[0] === null ? 1 : 0);\n\tnode = node.rotate(side);\n  \tnode.children[1 - side] = this._remove(node.children[1 - side], value);\n  \treturn node.resize();\n  } else {\n    side = ~~(value > node.value);\n    node.children[side] = this._remove(node.children[side], value);\n  \treturn node.resize();\n  }\n};\n\nTreap.prototype.insert = function (value) {\n  this.root = this._insert(this.root, value);\n};\n\nTreap.prototype.find = function (value) {\n  return this._find(this.root, value);\n};\n\nTreap.prototype.minimum = function () {\n  return this._minimum(this.root);\n};\n\nTreap.prototype.maximum = function () {\n  return this._maximum(this.root);\n};\n\nTreap.prototype.remove = function (value) {\n  this.root = this._remove(this.root, value);\n};\n\nTreap.prototype.size = function () {\n  return this.root ? this.root.size : 0;\n};\n\nTreap.prototype.height = function () {\n  return this.root ? this.root.height : 0;\n};\n\nmodule.exports = Treap;\n"},"lineCount":156}},"error":null,"hash":"922e7ae33732a1b017693fd337c187b9","cacheData":{"env":{}}}